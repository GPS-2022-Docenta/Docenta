function cov_ws4ekqc3n() {
  var path = "C:\\Users\\paulh\\OneDrive\\Escritorio\\Infor\\cuarto\\gpsw\\Docenta\\src\\data\\Countries.js";
  var hash = "bf00efaa603645b694a3a465b066fdf054f0ab5e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\paulh\\OneDrive\\Escritorio\\Infor\\cuarto\\gpsw\\Docenta\\src\\data\\Countries.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 27
        },
        end: {
          line: 242,
          column: 1
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bf00efaa603645b694a3a465b066fdf054f0ab5e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ws4ekqc3n = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ws4ekqc3n();
export const countryList = (cov_ws4ekqc3n().s[0]++, ["Afganistán", "Albania", "Alemania", "Andorra", "Angola", "Anguila", "Antártida", "Antigua y Barbuda", "Arabia Saudí", "Argelia", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaiyán", "Bahamas", "Bahréin", "Bangladesh", "Barbados", "Bélgica", "Belice", "Benín", "Bermudas", "Bielorrusia", "Bolivia", "Bosnia y Herzegovina", "Botsuana", "Bouvet, Isla", "Brasil", "Brunéi", "Bulgaria", "Burkina Faso", "Burundi", "Bután", "Cabo Verde", "Caimán, Islas", "Camboya", "Camerún", "Canadá", "Centroafricana, República", "Cocos, Isla de (Keeling)", "Colombia", "Comoras", "Congo", "Congo, República Democrática", "Cook, Islas", "Corea del Norte", "Corea del Sur", "Costa de Marfil", "Costa Rica", "Croacia", "Cuba", "Chad", "Checa, República", "Chile", "China", "Chipre", "Curaçao", "Dinamarca", "Dominica", "Dominicana, República", "Ecuador", "Egipto", "Emiratos Árabes Unidos", "Eritrea", "Eslovaquia", "Eslovenia", "España", "Estados Unidos de América", "Estonia", "Etiopía", "Feroe, Islas", "Filipinas", "Finlandia", "Fiyi", "Francia", "Gabón", "Gambia", "Georgia", "Georgia del Sur y las Islas Sandwich del Sur", "Ghana", "Gibraltar", "Granada", "Grecia", "Groenlandia", "Guam", "Guatemala", "Guernesey", "Guinea", "Guinea ecuatorial", "Guinea-Bisáu", "Guyana", "Haití", "Heard y McDonald, Islas", "Honduras", "Hong Kong", "Hungría", "India", "Indonesia", "Irán", "Iraq", "Irlanda", "Isla de Man", "Islandia", "Israel", "Italia", "Jamaica", "Japón", "Jersey", "Jordania", "Kazajistán", "Kenia", "Kirguistán", "Kiribati", "Kuwait", "Laos", "Lesoto", "Letonia", "Líbano", "Liberia", "Libia", "Liechtenstein", "Lituania", "Luxemburgo", "Macao", "Macedonia", "Madagascar", "Malasia", "Malawi", "Maldivas", "Malí", "Malta", "Malvinas, Islas", "Marianas del Norte, Islas", "Marruecos", "Marshall, Islas", "Mauricio", "Mauritania", "Mayotte", "Menores Alejadas de los EEUU", "México", "Micronesia", "Moldavia", "Mónaco", "Mongolia", "Montenegro", "Montserrat", "Mozambique", "Myanmar", "Namibia", "Nauru", "Navidad, Isla", "Nepal", "Nicaragua", "Níger", "Nigeria", "Niue, Isla", "Norfolk, Isla", "Noruega", "Nueva Caledonia", "Nueva Zelanda", "Océano Índico, Territorio Británico del", "Omán", "Países Bajos", "Países Bajos, Bonaire", "Pakistán", "Palau", "Panamá", "Papúa Nueva Guinea", "Paraguay", "Perú", "Pitcairn", "Polinesia Francesa", "Polonia", "Portugal", "Puerto Rico", "Qatar", "Reino Unido", "Ruanda", "Rumanía", "Rusia", "Salomón, Islas", "Salvador, El", "Samoa Occidental", "Samoa Americana", "San Cristóbal y Nieves", "San Marino", "San Martín", "San Pedro y Miquelón", "San Vicente y las Granadinas", "Santa Elena", "Santa Lucía", "Santo Tomé y Príncipe", "Senegal", "Serbia", "Seychelles", "Sierra Leona", "Singapur", "Siria", "Somalia", "Sri Lanka", "Suazilandia", "Sudáfrica", "Sudán", "Sudán del Sur", "Suecia", "Suiza", "Surinam", "Tailandia", "Taiwán", "Tanzania (República Unida de)", "Tayikistán", "Territorio Palestino Ocupado", "Tierras Australes Francesas", "Timor Oriental", "Togo", "Tokelau, Islas", "Tonga", "Trinidad y Tobago", "Túnez", "Turcas y Caicos, Islas", "Turkmenistán", "Turquía", "Tuvalu", "Ucrania", "Uganda", "Uruguay", "Uzbekistán", "Vanuatu", "Vaticano, Ciudad del", "Venezuela", "Vietnam", "Vírgenes Británicas, Islas", "Vírgenes de los EEUU, Islas", "Wallis y Futuna, Islas", "Yemen", "Yibuti", "Zambia", "Zimbabue"]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,